app CongressionalAppChallenge2024 {
  wasp: {
    version: "^0.13.0"
  },
  title: "CongressionalAppChallenge2024",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id    Int    @id @default(autoincrement())
    posts Post[]
psl=}

entity Post {=psl
    id          Int    @id @default(autoincrement())
    description String
    image       String
    district    String
    latitude    Float
    longitude   Float
    user        User   @relation(fields: [userId], references: [id])
    userId      Int
psl=}

action createPost {
  fn: import { createPost } from "@src/actions.js",
  entities: [Post],
}

action updatePost {
  fn: import { updatePost } from "@src/actions.js",
  entities: [Post],
}

action deletePost {
  fn: import { deletePost } from "@src/actions.js",
  entities: [Post],
}

query getPost {
  fn: import { getPost } from "@src/queries.js",
  entities: [Post],
}

query getPosts {
  fn: import { getPosts } from "@src/queries.js",
  entities: [Post],
}

query getUserPosts {
  fn: import { getUserPosts } from "@src/queries.js",
  entities: [User, Post],
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: false,
}

route PostRoute { path: "/post/:postId", to: PostPage }
page PostPage {
  component: import PostPage from "@src/pages/Post.jsx",
  authRequired: true,
}

route MapRoute { path: "/map", to: MapPage }
page MapPage {
  component: import MapPage from "@src/pages/Map.jsx",
  authRequired: false,
}